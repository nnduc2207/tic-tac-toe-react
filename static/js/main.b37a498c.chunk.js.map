{"version":3,"sources":["reportWebVitals.js","Square.js","Board.js","Game.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Square","props","className","inWinLine","onClick","value","Board","i","this","squares","winLine","includes","Array","keys","map","j","renderSquare","Component","Game","state","history","fill","location","col","row","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","Math","floor","step","newHistory","splice","status","current","win","winner","moves","el","move","desc","jumpTo","moveUp","disabled","line","handleClick","lines","a","b","c","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,0DCGCQ,MARf,SAAgBC,GACZ,OACE,wBAAQC,UAAS,iBAAYD,EAAME,UAAY,YAAc,IAAMC,QAASH,EAAMG,QAAlF,SACGH,EAAMI,SCDTC,E,kKACF,SAAaC,GAAI,IAAD,OACZ,OACE,cAAC,EAAD,CAEEF,MAAOG,KAAKP,MAAMQ,QAAQF,GAC1BJ,UAAWK,KAAKP,MAAMS,QAAQC,SAASJ,GACvCH,QAAS,kBAAM,EAAKH,MAAMG,QAAQG,KAH7BA,K,oBAQb,WAAU,IAAD,OAEL,OACE,8BACG,YAAIK,MAAM,GAAGC,QAAQC,KAAI,SAAAP,GACvB,OACC,qBAAKL,UAAU,YAAf,SACK,YAAIU,MAAM,GAAGC,QAAQC,KAAI,SAAAC,GACxB,OACE,EAAKC,aAAe,EAAFT,EAAIQ,OAHER,Y,GAlB5BU,aA+BLX,ICwGAY,E,kDAtIb,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,MAAQ,CACXC,QAAS,CACP,CACEX,QAASG,MAAM,GAAGS,KAAK,MACvBC,SAAS,CACPC,IAAK,KACLC,IAAK,QAIXC,WAAY,EACZC,SAAS,GAbM,E,+CAiBnB,SAAYnB,GACV,IAAMa,EAAUZ,KAAKW,MAAMC,QAAQO,MAAM,EAAGnB,KAAKW,MAAMM,WAAa,GAE9DhB,EADUW,EAAQA,EAAQQ,OAAS,GACjBnB,QAAQkB,QAC5BE,EAAgBpB,IAAYA,EAAQF,KAGxCE,EAAQF,GAAKC,KAAKW,MAAMO,QAAU,IAAM,IACxClB,KAAKsB,SAAS,CACZV,QAASA,EAAQW,OAAO,CACtB,CACEtB,QAASA,EACTa,SAAU,CACRC,IAAKhB,EAAI,EACTiB,IAAKQ,KAAKC,MAAM1B,EAAI,OAI1BmB,SAAUlB,KAAKW,MAAMO,QACrBD,WAAYL,EAAQQ,Y,oBAIxB,SAAOM,GAEL,IAAMd,EAAUZ,KAAKW,MAAMC,QACrBe,EAAU,YAAOf,GACvBe,EAAWC,OAAOF,EAAK,EAAG,GAC1BC,EAAWC,OAAOF,EAAK,EAAEd,EAAQc,EAAK,IAGtCC,EAAWD,EAAK,GAAGzB,QAAnB,YAAiC0B,EAAWD,EAAK,GAAGzB,SACpD0B,EAAWD,EAAK,GAAGzB,QAA0C,EAAlC0B,EAAWD,EAAK,GAAGZ,SAASE,IAAUW,EAAWD,EAAK,GAAGZ,SAASC,MAAQW,EAAO,GAAK,EAAI,IAAM,IAC3HC,EAAWD,GAAMzB,QAAjB,YAA+B0B,EAAWD,EAAK,GAAGzB,SAClD0B,EAAWD,GAAMzB,QAAwC,EAAhC0B,EAAWD,GAAMZ,SAASE,IAAUW,EAAWD,GAAMZ,SAASC,KAAOW,EAAO,EAAI,IAAM,IAG/G,IAAK,IAAI3B,EAAI2B,EAAO,EAAG3B,EAAI4B,EAAWP,OAAQrB,IAAK,CAClCsB,EAAgBM,EAAW5B,GAAGE,WAE3C0B,EAAWC,OAAO7B,EAAE,GACpBC,KAAKsB,SAAS,CACZV,QAASe,IAEP3B,KAAKW,MAAMM,WAAalB,GAC1BC,KAAKsB,SAAS,CACZL,WAAYlB,KAMpBC,KAAKsB,SAAS,CAACV,QAASe,M,oBAG1B,SAAOD,GACL1B,KAAKsB,SAAS,CACZL,WAAYS,EACZR,QAAUQ,EAAO,IAAO,M,oBAI5B,WAAU,IAKJG,EALG,OACDjB,EAAUZ,KAAKW,MAAMC,QACrBkB,EAAUlB,EAAQZ,KAAKW,MAAMM,YAC7Bc,EAAMV,EAAgBS,EAAQ7B,SAIlC4B,GADF,OAAIE,QAAJ,IAAIA,OAAJ,EAAIA,EAAKC,QACE,WAAaD,EAAIC,OACjBpB,EAAQQ,OAAS,GACjB,iBAAmBpB,KAAKW,MAAMO,QAAU,IAAM,KAE9C,iCAGX,IAAMe,EAAQrB,EAAQN,KAAI,SAAC4B,EAAIC,GAC7B,IAAMC,EAAOD,EAAI,uBAAmBA,EAAnB,wBAAuCD,EAAGpB,SAASC,IAAnD,aAA2DmB,EAAGpB,SAASE,IAAvE,MAAiF,mBAClG,OACE,+BACE,wBACEtB,UAAW,EAAKiB,MAAMM,aAAekB,EAAO,OAAS,GACrDvC,QAAS,kBAAM,EAAKyC,OAAOF,IAF7B,SAGKC,IAEJD,EAAO,EACN,wBACAvC,QAAS,kBAAM,EAAK0C,OAAOH,IAC3BI,SAAmB,IAATJ,EAFV,gBAGA,KACDA,EAAO,EACN,wBACAvC,QAAS,kBAAM,EAAK0C,OAAOH,EAAO,IAClCI,SAAUJ,IAASvB,EAAQQ,OAAS,EAFpC,kBAGA,OAfKe,MAoBb,OACE,sBAAKzC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAAC,EAAD,CACEO,QAAS6B,EAAQ7B,QACjBC,QAAS6B,EAAKA,EAAIS,KAAO,GACzB5C,QAAS,SAACG,GAAD,OAAO,EAAK0C,YAAY1C,QAGrC,sBAAKL,UAAU,YAAf,UACE,8BAAMmC,IACN,6BAAMI,c,GAhIGxB,aAyInB,SAASY,EAAgBpB,GAWvB,IAVA,IAAMyC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA3C,EAAI,EAAGA,EAAI2C,EAAMtB,OAAQrB,IAAK,CACrC,kBAAkB2C,EAAM3C,GAAxB,GAAO4C,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI5C,EAAQ0C,IAAM1C,EAAQ0C,KAAO1C,EAAQ2C,IAAM3C,EAAQ0C,KAAO1C,EAAQ4C,GACpE,MAAO,CACLb,OAAQ/B,EAAQ0C,GAChBH,KAAM,CAACG,EAAGC,EAAGC,IAInB,OAAO,KC3JTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BnE,M","file":"static/js/main.b37a498c.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './global.css'\r\n\r\nfunction Square(props) {\r\n    return (\r\n      <button className={`square ${props.inWinLine ? 'highlight' : ''}`} onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n\r\nexport default Square;\r\n","import { Component } from 'react'\r\nimport Square from './Square';\r\nimport './global.css'\r\n\r\nclass Board extends Component {\r\n    renderSquare(i) {\r\n        return (\r\n          <Square\r\n            key={i}\r\n            value={this.props.squares[i]}\r\n            inWinLine={this.props.winLine.includes(i)}\r\n            onClick={() => this.props.onClick(i)}\r\n          />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n          <div>\r\n            {[...Array(3).keys()].map(i =>\r\n              {return(\r\n                <div className=\"board-row\" key={i}>\r\n                    {[...Array(3).keys()].map(j => {\r\n                      return(\r\n                        this.renderSquare(i*3+j)\r\n                      )\r\n                    })}\r\n                </div>\r\n            )})}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board","import { Component } from \"react\";\r\nimport Board from \"./Board\";\r\nimport \"./global.css\";\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      history: [\r\n        {\r\n          squares: Array(9).fill(null),\r\n          location:{\r\n            col: null,\r\n            row: null,\r\n          }\r\n        },\r\n      ],\r\n      stepNumber: 0,\r\n      xIsNext: true,\r\n    };\r\n  }\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n          location: {\r\n            col: i % 3,\r\n            row: Math.floor(i / 3),\r\n          }\r\n        },\r\n      ]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length,\r\n    });\r\n  }\r\n\r\n  moveUp(step) {\r\n    //Change move\r\n    const history = this.state.history\r\n    const newHistory = [...history]\r\n    newHistory.splice(step-1, 1)\r\n    newHistory.splice(step,0,history[step-1])\r\n\r\n    // Change squares\r\n    newHistory[step-1].squares = [...newHistory[step-2].squares]\r\n    newHistory[step-1].squares[newHistory[step-1].location.row * 3 + newHistory[step-1].location.col] = (step - 1) % 2 ? 'X' : 'O'\r\n    newHistory[step].squares = [...newHistory[step-1].squares]\r\n    newHistory[step].squares[newHistory[step].location.row * 3 + newHistory[step].location.col] = step % 2 ? 'X' : 'O'\r\n\r\n    //Check winner\r\n    for (let i = step - 1; i < newHistory.length; i++) {\r\n      const winner = calculateWinner(newHistory[i].squares)\r\n      if (winner) {\r\n        newHistory.splice(i+1)\r\n        this.setState({\r\n          history: newHistory,\r\n        })\r\n        if (this.state.stepNumber > i) {\r\n          this.setState({\r\n            stepNumber: i,\r\n          })\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({history: newHistory})\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const win = calculateWinner(current.squares);\r\n\r\n    let status;\r\n    if (win?.winner) {\r\n      status = \"Winner: \" + win.winner;\r\n    } else if (history.length < 10) {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    } else {\r\n      status = \"End game: no one become winner\"\r\n    }\r\n\r\n    const moves = history.map((el, move) => {\r\n      const desc = move ? `Go to move # ${move}: Choice at (${el.location.col}, ${el.location.row}) ` : \"Go to game start\";\r\n      return (\r\n        <li key={move}>\r\n          <button \r\n            className={this.state.stepNumber === move ? 'bold' : ''}\r\n            onClick={() => this.jumpTo(move)}>\r\n              {desc}\r\n          </button>\r\n          {move > 0 ? \r\n            <button \r\n            onClick={() => this.moveUp(move)}\r\n            disabled={move === 1}>UP</button>\r\n          : null}\r\n          {move > 0 ? \r\n            <button \r\n            onClick={() => this.moveUp(move + 1)}\r\n            disabled={move === history.length - 1}>DOWN</button>\r\n          : null}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            squares={current.squares}\r\n            winLine={win? win.line : []}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{ moves }</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return {\r\n        winner: squares[a],\r\n        line: [a, b, c],\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Game from './Game';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Game />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}