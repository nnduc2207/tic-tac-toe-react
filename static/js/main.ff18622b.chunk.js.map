{"version":3,"sources":["reportWebVitals.js","Square.js","Board.js","Game.js","Window.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Square","props","className","inWinLine","onClick","value","Board","i","this","squares","winLine","includes","Array","size","keys","map","j","renderSquare","Component","Game","state","history","fill","location","col","row","stepNumber","xIsNext","slice","length","calculateWinner","setState","concat","Math","floor","step","newHistory","splice","status","current","win","winner","moves","el","move","desc","jumpTo","moveUp","disabled","line","handleClick","sqrt","lines","horizontal","vertical","push","cross","reverse","role","every","num","Window","input","console","log","React","createElement","Number","type","placeholder","onChange","e","target","required","renderGame","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff18622b.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './global.css'\r\n\r\nfunction Square(props) {\r\n    return (\r\n      <button className={`square ${props.inWinLine ? 'highlight' : ''}`} onClick={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n\r\nexport default Square;\r\n","import { Component } from 'react'\r\nimport Square from './Square';\r\nimport './global.css'\r\n\r\nclass Board extends Component {\r\n    renderSquare(i) {\r\n        return (\r\n          <Square\r\n            key={i}\r\n            value={this.props.squares[i]}\r\n            inWinLine={this.props.winLine.includes(i)}\r\n            onClick={() => this.props.onClick(i)}\r\n          />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n          <div>\r\n            {[...Array(this.props.size).keys()].map(i =>\r\n              {return(\r\n                <div className=\"board-row\" key={i}>\r\n                    {[...Array(this.props.size).keys()].map(j => {\r\n                      return(\r\n                        this.renderSquare(i*this.props.size+j)\r\n                      )\r\n                    })}\r\n                </div>\r\n            )})}\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Board","import { Component } from \"react\";\r\nimport Board from \"./Board\";\r\nimport \"./global.css\";\r\n\r\nclass Game extends Component {\r\n  state = {\r\n    size: this.props.size,\r\n    history: [\r\n      {\r\n        squares: Array(this.props.size ** 2).fill(null),\r\n        location:{\r\n          col: null,\r\n          row: null,\r\n        }\r\n      },\r\n    ],\r\n    stepNumber: 0,\r\n    xIsNext: true,\r\n  };\r\n\r\n  handleClick(i) {\r\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n    const current = history[history.length - 1];\r\n    const squares = current.squares.slice();\r\n    if (calculateWinner(squares) || squares[i]) {\r\n      return;\r\n    }\r\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n    this.setState({\r\n      history: history.concat([\r\n        {\r\n          squares: squares,\r\n          location: {\r\n            col: i % this.state.size,\r\n            row: Math.floor(i / this.state.size),\r\n          }\r\n        },\r\n      ]),\r\n      xIsNext: !this.state.xIsNext,\r\n      stepNumber: history.length,\r\n    });\r\n  }\r\n\r\n  moveUp(step) {\r\n    //Change move\r\n    const history = this.state.history\r\n    const newHistory = [...history]\r\n    newHistory.splice(step-1, 1)\r\n    newHistory.splice(step,0,history[step-1])\r\n\r\n    for (let i = step - 1; i < newHistory.length; i++) {\r\n      // Change squares\r\n      newHistory[i].squares = [...newHistory[i-1].squares]\r\n      newHistory[i].squares[newHistory[i].location.row * this.state.size + newHistory[i].location.col] = i % 2 ? 'X' : 'O'\r\n\r\n      //Check winner\r\n      const winner = calculateWinner(newHistory[i].squares)\r\n      if (winner) {\r\n        newHistory.splice(i+1)\r\n        this.setState({\r\n          history: newHistory,\r\n        })\r\n        if (this.state.stepNumber > i) {\r\n          this.setState({\r\n            stepNumber: i,\r\n          })\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({history: newHistory})\r\n  }\r\n\r\n  jumpTo(step) {\r\n    this.setState({\r\n      stepNumber: step,\r\n      xIsNext: (step % 2) === 0,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];\r\n    const win = calculateWinner(current.squares);\r\n\r\n    let status;\r\n    if (win?.winner) {\r\n      status = \"Winner: \" + win.winner;\r\n    } else if (this.state.stepNumber < this.state.size ** 2) {\r\n      status = \"Next player: \" + (this.state.xIsNext ? \"X\" : \"O\");\r\n    } else {\r\n      status = \"End game: no one become winner\"\r\n    }\r\n\r\n    const moves = history.map((el, move) => {\r\n      const desc = move ? `Go to move # ${move}: Choice at (${el.location.col}, ${el.location.row}) ` : \"Go to game start\";\r\n      return (\r\n        <li key={move}>\r\n          <button \r\n            className={this.state.stepNumber === move ? 'bold' : ''}\r\n            onClick={() => this.jumpTo(move)}>\r\n              {desc}\r\n          </button>\r\n          {move > 0 ? \r\n            <button \r\n            onClick={() => this.moveUp(move)}\r\n            disabled={move === 1}>UP</button>\r\n          : null}\r\n          {move > 0 ? \r\n            <button \r\n            onClick={() => this.moveUp(move + 1)}\r\n            disabled={move === history.length - 1}>DOWN</button>\r\n          : null}\r\n        </li>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board\r\n            size={this.state.size}\r\n            squares={current.squares}\r\n            winLine={win? win.line : []}\r\n            onClick={(i) => this.handleClick(i)}\r\n          />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{ moves }</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n\r\nfunction calculateWinner(squares) {\r\n  const size = Math.sqrt(squares.length)\r\n\r\n  // Check all lines to calculate winner\r\n  const lines = [];\r\n  for (let i = 0; i < size; i++) {\r\n    const horizontal = []\r\n    const vertical = []\r\n    for (let j = 0; j < size; j++) {\r\n      horizontal.push(i * size + j)\r\n      vertical.push(i + j * size)\r\n    }\r\n    lines.push(horizontal)\r\n    lines.push(vertical)\r\n  }\r\n  const cross = []\r\n  const reverse = []\r\n  for (let i = 0; i < size; i++) {\r\n    cross.push(i * size + i)\r\n    reverse.push((i+1) * size - (i+1))\r\n  }\r\n  lines.push(cross)\r\n  lines.push(reverse)\r\n\r\n  // check winner\r\n  for (let i = 0; i < lines.length; i++) {\r\n    if (!squares[lines[i][0]]) {\r\n      continue;\r\n    }\r\n    let role = squares[lines[i][0]]\r\n    const res = lines[i].every(num => {\r\n      return squares[num] === role\r\n    })\r\n\r\n    if (res) {\r\n      return {\r\n        winner: role,\r\n        line: lines[i],\r\n      };\r\n    }\r\n  }\r\n  return null;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Game from \"./Game\";\r\nimport \"./global.css\";\r\n\r\nclass Window extends Component {\r\n    state = {\r\n        input: null,\r\n        size: null,\r\n    }\r\n\r\n    renderGame(size) {\r\n        console.log(size);\r\n        if (size > 0) {\r\n            console.log(typeof size);\r\n            return React.createElement(Game, { size: Number(size) })\r\n        }\r\n        return null\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <input \r\n                    className={'input'}\r\n                    type={'number'} \r\n                    placeholder={'Please input size of board (nxn) ...'} \r\n                    value={this.state.input} \r\n                    onChange={(e) => {\r\n                        this.setState({input: e.target.value})\r\n                    }}\r\n                    required\r\n                />\r\n\r\n                <button onClick={() => {\r\n                    this.setState({size: this.state.input})\r\n                }}\r\n                disabled={!!this.state.size}>Enter</button>\r\n\r\n                <button onClick={() => {\r\n                    this.setState({size: null})\r\n                }}\r\n                disabled={!this.state.size}>Reset</button>\r\n                \r\n                {this.renderGame(this.state.size)}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Window;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport Window from './Window';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Window />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}